Java Coding 

**𝐁𝐚𝐬𝐢𝐜 𝐉𝐚𝐯𝐚:** 1. Check if a number is prime or not. 2. Swap two numbers without using a temporary variable. 3. Write a program to find the sum of all prime numbers within a given range (e.g., between 1 and 100) 4. Find the factorial of a given number. 5. Reverse a string without using any built-in functions. 6. Check if a string is a palindrome or not. 7. Generate Fibonacci series up to a given number. 8. Calculate the sum of digits in a number. 9. Find the maximum and minimum values in an array of integers. 10. Sort an array of integers in ascending order.  **𝐀𝐫𝐫𝐚𝐲𝐬:** 1. Find the second largest element in an array. 2. Remove duplicates from an array. 3. Find the sum of all elements in an array. 4. Check if two arrays are equal. 5. Merge two sorted arrays into a single sorted array. 6. Find the missing number in an array of consecutive numbers. 7. Rotate an array to the right by a given number of steps. 8. Find the common elements between two arrays. 9. Count the frequency of elements in an array. 10. Remove a specific element from an array and shift the remaining elements.  **𝐋𝐨𝐨𝐩𝐬 and 𝐂𝐨𝐧𝐝𝐢𝐭𝐢𝐨𝐧𝐬:** 1. Print numbers from 1 to 100, but replace multiples of 3 with "Fizz" and multiples of 5 with "Buzz." 2. Calculate the sum of all even numbers from 1 to n using a loop. 3. Check if a given year is a leap year or not. 4. Print the factorial of a given number using a loop. 5. Find the largest among three numbers using if-else conditions. 6. Generate a pattern of numbers using nested loops. 7. Print the reverse of a number using a while loop. 8. Calculate the average of numbers in an array using a for-each loop. 9. Implement a calculator program with options for addition, subtraction, multiplication, and division. 10. Determine if a given number is positive, negative, or zero using if-else conditions.  **𝐒𝐭𝐫𝐢𝐧𝐠𝐬:** 1. Count the number of vowels in a string. 2. Reverse words in a sentence without using built-in functions. 3. Check if a string is an anagram of another string. 4. Convert the first letter of each word in a string to uppercase. 5. Remove all white spaces from a string. 6. Find the length of the longest substring without repeating characters. 7. Check if a string is a valid palindrome ignoring non-alphanumeric characters. 8. Count the occurrence of a specific word in a given string. 9. Concatenate two strings without using the concatenation operator. 10. Check if a string is a valid email address.


1: Explain about your framework?
2: Have you used POM in your framework?
3: What is Page Factory?
4: Suppose you have 7 pages in your application then to achieve POM what will you do?
5: Have you used an interface in your framework other than selenium interfaces?
6: What are all the selenium interfaces?
7: Synchronization in selenium? syntax for implicit wait
8: How will you handle the popup window ?other then get window handle
9: What are Listeners?
10: How will you handle alerts?
11: How to get a system date and time?
12: How to connect to the database?
13: Exceptions in selenium?
14: Suppose u have class and abstract class in class there is a user defined constructor and main method which one will get executed first?
15: Primitives and Non Primitives data types in java? String is primitive or non primitive
16: What is Hashmap ? Can we store objects in a hash map and how to retrieve them?
17: What is Jenkins?
18: What is the use of Pom.xml?
19:what is the use of testng.xml?
20:Annotation used in page object model?

1. What have you done still now as part of your IT experience?
2. Do you know OOPs concepts and in a framework where and how you have implemented it?
3. Can we declare a private class?
4. What is the difference between == and equals?
5. How is the string immutable?
6. Where strings get stored and where does the reference get stored?
7. Can you please explain with reference the memory location of how the string is immutable?
8. If you don't want to use the String class then what can be used?
9. Difference between String and StringBuffer.
10. What collections have you used?
11. Have you used HashMap?
12. List declaration?
13. Where is the Set used?
14. You have an application like Flipkart and you want to buy a pen, so you have added that item two times to the cart using an add to cart button, but in the cart, only one entry for an item should be displayed with quantity as 2, so how you’ll test this?
15. I have a table and want to store all table data Then which collection should be used and why?
16. What HashMap will return?
17. How to achieve inheritance without having an interface?
18. Method overloading and method overriding? Where used in the framework?
19. If I want that my class should not be extended and the instance cannot be created by other classes then how to declare class?
20. How to store multiple values in one reference?
21. In cucumber, in which class you have glue, how many classes for glue, and what was the program line limit for the class?
22. How to find a missing implementation in Cucumber?, Used static data or dynamic data, what was the approach?
23. How to resolve conflicts while pushing code in Git?
24. Difference between QTP and Selenium (advantages and disadvantages).
25. How can we achieve parallel execution.
26. Running multiple tests for the same browser
27. Running tests on different browsers
28. Difference between Throw and Throws.
29. If an exception is declared in throws and if an exception is encountered what will happen?
30. Difference between try/catch block and throws.
31. Explain different waits in Selenium.
32. Which wait is better?
33. The syntax for the implicit wait.
34. What does the driver.manage() do?
35. Database testing using Selenium.
36. How will you establish a connection using a JDBC driver?
37. How do you fire queries while using JDBC?
38. Difference between Class and Instance variables.
39. Concept of Selenium Grid.Multiple nodes and errors.
40. How to find the horizontal and vertical position of an element without Javascript Executor.
41. How does hashmap work?

1. Find black spaces in a String.
2. Program to count to position of the a number in an array.
3. Automate Login in Facebook, read all notifications.
4. Testcase of a fan.
5. Severity Priority puzzles.
Counting no. of negatives in an array
Finding the non repeating element in an array of repeating elements
WAP to find any element in an array *
 What is a HashMap, what will happen if we try to put any duplicate key value pair. * 
What is difference between ArrayList and Array. 
* What is initial size of ArrayList and how much does it increases when we add any new element to it. 
* What is final keyword 
Scenario based questions * Role based tests for swiggy application. 
* What are testNG annotations you've used. 
* What will be order of running tests in testNG. 
* What are different types of polymorphisms. Explain them and with example. 
* Method overloading and over riding. 
* What is final keyword used for. 
* How do you handle exceptions. 
* What are different types of locators. Which one do you use and why. 
* What is different between CSS locator and Xpath Locator.

find number of anagrams possible in a sentance.
what is concurrent hashmap
find the smallest number greater than the input number
Selenium web driver architecture
4. Rest API Get and Post syntax with examples
5. How to handle nested frames in different windows
6. How to handle the dynamic web table in selenium
7. How to get an xpath for dynamic web element in a webpage.
8. Write the syntax for cucumber scenario
9. Windows handling code for 5 windows using selenium 4
10. Lambda expressions syntax
11. Difference between String and Stringbuffer
12. Difference between hashMap and hashtable
13. Different errorcodes in RestApi
14. TestNg annotations
15. Difference between Test Plan and test strategy
16. Java program to count the occurrence of vowels in a given string
17. How to share knowledge across team members if I'm playing a role of team lead
18. Bug lifecycle
19. Agile cermenois
2. How to perform integration testing with an example
3. Difference between inner join and outer join with some table examples.
4. Write query - To select the second highest salary in the employee table
5. Oops concept implementation in our framework with examples
6.When do we perform regression testing and what is the use.
7. What is the use of property file in framework
8.TestNg XML structure
9. Explain about web driver waits
10.Syntax for retry the failed tests in testNg
11. List some listeners and it's use
12. Collections concepts with syntax
13. Some mobile automation concepts and how it's different from normal web automation
14. What do you mean by recursion
15. Rest methods and it's difference.

8. If i found a bug in release day,how do I approach
9. If requirements are frequently changing , how do I approach

: Explain about your framework?
2: Have you used POM in your framework?
3: What is Page Factory?
4: Suppose you have 7 pages in your application then to achieve POM what will you do?
5: Have you used an interface in your framework other than selenium interfaces?
6: What are all the selenium interfaces?
7: Synchronization in selenium? syntax for implicit wait
8: How will you handle the popup window ?other then get window handle
9: What are Listeners?
10: How will you handle alerts?
11: How to get a system date and time?
12: How to connect to the database?
13: Exceptions in selenium?
14: Suppose u have class and abstract class in class there is a user defined constructor and main method which one will get executed first?
15: Primitives and Non Primitives data types in java? String is primitive or non primitive
16: What is Hashmap ? Can we store objects in a hash map and how to retrieve them?
17: What is Jenkins?
18: What is the use of Pom.xml?
19:what is the use of testng.xml?
20:Annotation used in page object model?
Selenium Webdriver interview questions

1.Get Row and Column values from an HTML WebTable

2.Switch to a specific window out of 100 windows and validate it

3.Find Broken Links in Selenium /How do you find broken links in Selenium WebDriver?

4. What is the same-origin policy and how is it handled?

5.What is the major difference between driver.close() and driver.quit()?

6. How to scroll down a page using JavaScript?

7. How to mouse hover over a web element?

8. What is POM (Page Object Model)?

9. How does Selenium handle Windows-based pop-ups?

10. How to take screenshots in WebDriver?

11.Is there a way to type in a textbox without using sendKeys()?

12.How to upload a file in Selenium WebDriver?

13. When do we use findElement() and findElements()?

14. How do you perform drag and drop operations in WebDriver?

15. How do you deal with stale element exceptions in Selenium?

1. Basic SQL Queries:
- Fetch all columns from a table:
- SELECT * FROM table_name;
- Get distinct values from a column:
- SELECT DISTINCT column_name FROM table_name;
- Retrieve top N records from a table:
- SELECT * FROM table_name LIMIT N;

2. Filtering and Sorting:
- Filter rows where a column equals a value:
- SELECT * FROM table_name WHERE column_name = value;
- Filter rows within a range:
- SELECT * FROM table_name WHERE column_name BETWEEN value1 AND value2;
- Retrieve rows with NULL values in a column:
- SELECT * FROM table_name WHERE column_name IS NULL;
- Sort result set in ascending/descending order:
- SELECT * FROM table_name ORDER BY column_name ASC/DESC;

3. Aggregate Functions:
- Count total rows:
- SELECT COUNT(*) FROM table_name;
- Calculate average, sum, min, max:
- SELECT AVG(column_name), SUM(column_name), MIN(column_name), MAX(column_name) FROM table_name;
- Group and calculate aggregates:
- SELECT column_name, AVG(salary) FROM table_name GROUP BY column_name;

4. Joins:
- INNER, LEFT, RIGHT, FULL joins explained:
- INNER: Retrieve common rows from both tables.
- LEFT: All rows from the left table and matching rows from the right.
- RIGHT: All rows from the right table and matching from the left.
- FULL: All rows from both tables.
- Retrieve data from multiple tables:
- SELECT * FROM table1 JOIN table2 ON table1.column_name = table2.column_name;

5. Subqueries:
- Using a subquery to retrieve data:
- SELECT * FROM table_name WHERE column_name IN (SELECT column_name FROM another_table);
- Comparing values between tables:
- SELECT * FROM table1 WHERE column_name = (SELECT column_name FROM table2 WHERE condition);

6. Data Modification:
- Insert new record:
- INSERT INTO table_name (column1, column2, ...) VALUES (value1, value2, ...);
- Update records:
- UPDATE table_name SET column_name = new_value WHERE condition;
- Delete records:
- DELETE FROM table_name WHERE condition;

7. Table Design and Constraints:
- Primary key vs. Foreign key differences:
- Primary key uniquely identifies a record, while a foreign key links to another table's primary key.
- Design a table schema:
- Create table with appropriate columns, primary keys, and foreign keys.

8. Advanced Queries:
- Retrieve the nth highest (or lowest) value:
- SELECT column_name FROM table_name ORDER BY column_name DESC LIMIT n-1, 1;

- How do I convert List to array and array to list?
- How to remove a SubList from a List in Java ?
- How to do Sorting of an Array?
- How to add element to arrlst?
- Difference between ArrayList and HashMap in Java?
